(()=>{var r={843:r=>{r.exports="#version 300 es\nprecision highp float;\n\n// Formal vector of the fragment. After model-view transformation.\nin vec3 fnormal;\n\nuniform vec4 color;\n// Light direction. After model-view transformation.\nuniform vec3 lightdir;\n// Light color.\nuniform vec4 lightcolor;\n\nout vec4 fragColor;\n\n// larger scale, smaller specular area\nfloat specularScale = 100.0;\n// larger intensity, brighter specular\nfloat specularIntensity = 0.6;\n\nvoid main() {\n  vec3 fd = normalize(fnormal);\n  vec3 ld = normalize(lightdir);\n\n  // Diffuse light intensity\n  float lambert = max(0.0, dot(fd, ld));\n\n  // Specular light intensity\n  vec3 ed = normalize(vec3(0, 0, 0));\n  // Half way vector eye direction and light direction\n  vec3 h = normalize(ld + ed);\n  // Use object color and object specular lighting.\n  float blinnphong = pow(max(0.0, dot(fd, h)), specularScale);\n\n  fragColor = vec4(color.rgb * lambert + lightcolor.rgb * blinnphong * specularIntensity, color.a);\n}\n"},659:r=>{r.exports="#version 300 es\n\nin vec4 position;\nin vec3 normal;\n\nout vec3 fnormal;\n\nuniform mat4 m; // model matrix\nuniform mat4 v; // view matrix\nuniform mat4 p; // projection matrix\n\nvoid main() {\n  gl_Position = p * v * m * position;\n  fnormal = mat3(v) * mat3(m) * normal;\n}"}},n={};function t(e){var o=n[e];if(void 0!==o)return o.exports;var a=n[e]={exports:{}};return r[e](a,a.exports,t),a.exports}(()=>{"use strict";function r(r,n){r=Array.from(r),n&&n<r.length&&(r=r.slice(0,n));let t=Math.sqrt(r.map((r=>r*r)).reduce(((r,n)=>r+n)));return r.map((r=>r/t))}function n(r,n){return[r[1]*n[2]-r[2]*n[1],r[2]*n[0]-r[0]*n[2],r[0]*n[1]-r[1]*n[0]]}function e(r,n,t){return t=t?Math.min(r.length,n.length,t):Math.min(r.length,n.length),Array.from(r).slice(0,t).map(((r,t)=>r*n[t])).reduce(((r,n)=>r+n))}function o(r,n,t){return t=t?Math.min(r.length,n.length,t):Math.min(r.length,n.length),Array.from(r).slice(0,t).map(((r,t)=>r+n[t]))}function a(r,n,t){return t=t?Math.min(r.length,n.length,t):Math.min(r.length,n.length),Array.from(r).slice(0,t).map(((r,t)=>r-n[t]))}function i(r,n){if(!(16===r.length&&16===n.length||16===r.length&&4===n.length))throw new Error(`Invalid Matrix Length: ${r.length}, ${n.length}`);return 16===n.length?function(r,n){let t=new Float32Array(16);for(let e=0;e<4;e+=1)for(let o=0;o<4;o+=1)for(let a=0;a<4;a+=1)t[e+4*o]+=r[e+4*a]*n[a+4*o];return t}(r,n):function(r,n){let t=new Float32Array(4);for(let e=0;e<4;e+=1)for(let o=0;o<4;o+=1)t[e]+=r[e+4*o]*n[o];return t}(r,n)}function l(){return 1==arguments.length?arguments[0]:Array.prototype.reduce.apply(arguments,[i])}function c(r,n,t){return new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,r,n,t,1])}function m(r,n,t){return null==n&&null==t&&(t=n=r),new Float32Array([r,0,0,0,0,n,0,0,0,0,t,0,0,0,0,1])}const s=new Float32Array([1,1,1,1]),g=new Float32Array([.1,.01,.2,1]);function h(){const r=[],n=[],t=[],e=[];for(let o=0;o<numParticles;o+=1){e.push(.1*Math.random()+.05);const a=Math.random()*(xmax-xmin-2*e[o])+xmin+e[o],i=Math.random()*(ymax-ymin-2*e[o])+ymin+e[o],l=Math.random()*(zmax-zmin-2*e[o])+zmin+e[o];r.push([a,i,l,1]),n.push([Math.random(),Math.random(),Math.random()]),t.push([Math.random(),Math.random(),Math.random(),1])}window.positions=r,window.velocity=n,window.colors=t,window.radius=e}function u(){let r=document.querySelector("canvas");document.body.style.margin="0",r.style.width="100%",r.style.height="100%",r.width=r.clientWidth,r.height=r.clientHeight,r.style.width="",r.style.height="",window.gl&&(gl.viewport(0,0,r.width,r.height),window.p=function(r,n,t,e,o){var a,i;{let r=void 0===o?e:e/o;a=(i=1/Math.tan(.5))/r}return new Float32Array([a,0,0,0,0,i,0,0,0,0,-20.1/19.9,-1,0,0,4/-19.9,0])}(0,0,0,r.width,r.height))}new Float32Array([1,.373,.02,1]),window.addEventListener("load",(async function(){window.gl=document.querySelector("canvas").getContext("webgl2",{antialias:!1,depth:!0,preserveDrawingBuffer:!0}),gl.enable(gl.DEPTH_TEST);const i=t(659),d=t(843);window.program=function(r,n,t){let e=r.createShader(r.VERTEX_SHADER);if(r.shaderSource(e,n),r.compileShader(e),!r.getShaderParameter(e,r.COMPILE_STATUS))throw console.error(r.getShaderInfoLog(e)),Error("Vertex shader compilation failed");let o=r.createShader(r.FRAGMENT_SHADER);if(r.shaderSource(o,t),r.compileShader(o),!r.getShaderParameter(o,r.COMPILE_STATUS))throw console.error(r.getShaderInfoLog(o)),Error("Fragment shader compilation failed");const a=r.createProgram();if(r.attachShader(a,e),r.attachShader(a,o),r.linkProgram(a),!r.getProgramParameter(a,r.LINK_STATUS))throw console.error(r.getProgramInfoLog(a)),Error("Linking failed");return a}(gl,i,d);const f=function(r,n,t){const e=[],o=[],a=[];for(let r=0;r<100;r+=1){const t=Math.PI/2-.010101010101010102*Math.PI*r,i=(r+1)%100;for(let l=0;l<n;l+=1){const c=(l+1)%n,m=2*Math.PI*.01*l,s=1*Math.cos(t)*Math.cos(m),g=1*Math.cos(t)*Math.sin(m),h=1*Math.sin(t);e.push([s,g,h]),o.push([s,g,h]);const u=r*n+l,d=r*n+c,f=i*n+l,w=i*n+c;a.push([u,f,d]),a.push([d,f,w])}}return{attributes:{position:e,normal:o},triangles:a}}(0,100);window.geom=function(r,n,t){const e=r.createVertexArray();r.bindVertexArray(e),Object.entries(n.attributes).forEach((([n,e])=>{if(null==e)return;let o=r.createBuffer();r.bindBuffer(r.ARRAY_BUFFER,o);let a=new Float32Array(e.flat());r.bufferData(r.ARRAY_BUFFER,a,r.STATIC_DRAW);let i=r.getAttribLocation(t,n);r.vertexAttribPointer(i,e[0].length,r.FLOAT,!1,0,0),r.enableVertexAttribArray(i)}));var o=new Uint16Array(n.triangles.flat()),a=r.createBuffer();return r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,a),r.bufferData(r.ELEMENT_ARRAY_BUFFER,o,r.STATIC_DRAW),{mode:r.TRIANGLES,count:o.length,type:r.UNSIGNED_SHORT,vao:e}}(gl,f,program),window.camera=new Float32Array([0,0,-3,1]),window.center=new Float32Array([0,0,0,0]),window.up=new Float32Array([0,1,0,0]),window.v=function(t,e,o){let a=r(n(e,o)),i=n(a,e);return l(new Float32Array([a[0],i[0],-e[0],0,a[1],i[1],-e[1],0,a[2],i[2],-e[2],0,0,0,0,1]),c(-t[0],-t[1],-t[2]))}(camera,r(a(center,camera)),up),window.lightdir=new Float32Array([2,2,2]),window.lightcolor=s,u(),window.xmin=-1,window.xmax=1,window.ymin=-1,window.ymax=1,window.zmin=-1,window.zmax=1,window.minWall=[xmin,ymin,zmin],window.maxWall=[xmax,ymax,zmax],window.numParticles=50,h();const w=(r,n,t)=>{const e=r.map((r=>10*-r*n*n)).map((r=>r*t));return o(r,e)},y=(r,n,t)=>o(r,n.map((r=>r*t))),A=(r,n,t,o)=>{let i=n;for(let l=0;l<3;l+=1)if(r[l]+t>=maxWall[l]){const r=[0,0,0];r[l]=-1;const t=e(n,r);t<0&&(i=a(n,r.map((r=>r*t*2))).map((r=>r*o)))}else if(r[l]-t<=minWall[l]){const r=[0,0,0];r[l]=1;const t=e(n,r);t<0&&(i=a(n,r.map((r=>r*t*2))).map((r=>r*o)))}return i},x=(n,t,i,l,c,m,s)=>{const g=a(l,n),h=r(g),u=(d=g,Math.sqrt(d.reduce(((r,n)=>r+n*n),0))<=i+m);var d;const f=e(t,h),w=e(c,h);if(u&&f>w){const r=a(h.map((r=>r*f)),h.map((r=>r*w))),n=i*i*i,e=m*m*m,l=e/(n+e),g=n/(n+e),u=r.map((r=>r*-l*(1+s))),d=r.map((r=>r*g*(1+s)));return[o(t,u),o(c,d)]}return[t,c]};let M=0;const F=r=>{const n=r/1e3,t=n-M;M=n;const e=1/t;document.querySelector("#fps").innerHTML=`FPS: ${e.toFixed(4)}`,gl.clearColor(...g),gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT);for(let r=0;r<numParticles;r+=1){const n=positions[r].slice(0,3),t=velocity[r];positions[r]=[...y(n,t,.01),1],velocity[r]=w(t,radius[r],.01),velocity[r]=A(positions[r],velocity[r],radius[r],.9)}for(let r=0;r<numParticles;r+=1)for(let n=r+1;n<numParticles;n+=1){const[t,e]=x(positions[r],velocity[r],radius[r],positions[n],velocity[n],radius[n],.9);velocity[r]=t,velocity[n]=e}for(let r=0;r<numParticles;r+=1){const[n,t,e,o]=positions[r],a=l(c(n,t,e),m(radius[r],radius[r],radius[r]));gl.useProgram(program),gl.uniformMatrix4fv(gl.getUniformLocation(program,"m"),!1,a),gl.uniformMatrix4fv(gl.getUniformLocation(program,"v"),!1,v),gl.uniformMatrix4fv(gl.getUniformLocation(program,"p"),!1,p),gl.uniform4fv(gl.getUniformLocation(program,"color"),colors[r]),gl.uniform3fv(gl.getUniformLocation(program,"lightdir"),lightdir),gl.uniform4fv(gl.getUniformLocation(program,"lightcolor"),lightcolor),gl.bindVertexArray(geom.vao),gl.drawElements(geom.mode,geom.count,geom.type,0)}requestAnimationFrame(F)};requestAnimationFrame(F)})),window.addEventListener("resize",u),window.setInterval(h,5e3)})()})();